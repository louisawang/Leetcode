# Definition for a point
# class Point:
#     def __init__(self, a=0, b=0):
#         self.x = a
#         self.y = b

# O(n^2)
class Solution:   
    # @param points, a list of Points
    # @return an integer
    def maxPoints(self, points):
    	if len(points)<=1:
    		return len(points)
    	max_line=0
        for i in range(len(points)):
            current_max, lines, parallel_y, same=0, {}, 0,1
            
            for j in range(i+1,len(points)):
                if points[i].x==points[j].x and points[i].y==points[j].y:  # wired, this line could not write as points[i]==points[j]
                    same+=1
                        
                elif points[i].x==points[j].x:
                        parallel_y+=1
                else:
                    current_line= (points[i].y-points[j].y)/(float(points[i].x)-points[j].x)
                    if current_line not in lines:
                        lines[current_line]=1
                    else:
                        lines[current_line]+=1
            
            for line in lines:
                current_max=max(current_max, lines[line]+same)
               
            current_max=max(current_max, same+parallel_y)
            max_line=max(max_line, current_max)
                        
          
        return max_line
                
